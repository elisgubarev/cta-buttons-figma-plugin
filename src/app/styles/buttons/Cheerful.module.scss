@use "../data/global.scss";
@use "../data/shadows.scss";
@use "../data/colors.scss";
@use "../data/constants.scss" as const;

.base {
  @include global.button;
  background-color: colors.$amber;
  padding: 14px 40px;
  border-radius: 4px;
  column-gap: 5px;
  box-shadow: 0 0 0 1px colors.$black inset, 0 0 0 0 colors.$black;
  transition: transform const.$transition, box-shadow const.$transition,
    background-color const.$transition;
}

.hasHover {
  &:hover {
    transform: translate(-4px, -4px);
    box-shadow: 0 0 0 1px colors.$black inset, 4px 4px 0 0 colors.$black;
  }
}

.outline {
  background-color: colors.$white;
  box-shadow: 0 0 0 1px colors.$black inset, 0 0 0 0 colors.$black;
  &.hasHover:hover {
    box-shadow: 0 0 0 1px colors.$black inset, 4px 4px 0 0 colors.$black;
  }
}

.darkTheme {
  background-color: colors.$white;
  .text {
    color: colors.$ui-dark;
  }
  .arrow {
    path {
      fill: colors.$ui-dark;
    }
  }
  &.outline {
    background-color: colors.$ui-dark;
    box-shadow: 0 0 0 1px colors.$white inset, 0 0 0 0 colors.$white;
    .text {
      color: colors.$white;
    }
    .arrow path {
      fill: colors.$white;
    }
    &.hasHover:hover {
      background-color: colors.$ui-dark;
      box-shadow: 0 0 0 1px colors.$white inset, 4px 4px 0 0 colors.$white;
    }
  }
}

.text {
  color: colors.$black;
  font-size: 14px;
  font-weight: 400;
  font-family: "Lato", sans-serif;
  line-height: 100%;
  transition: color const.$transition;
}

.arrow {
  position: relative;
  top: 1px;
  transition: transform const.$transition;
  path {
    transition: fill const.$transition;
  }
}
