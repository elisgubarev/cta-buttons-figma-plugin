@use "../data/global.scss";
@use "../data/shadows.scss";
@use "../data/colors.scss";
@use "../data/constants.scss" as const;

.base {
  @include global.button;
  background-color: colors.$blurple;
  box-shadow: shadows.$small, inset 0px 0px 0px 1px colors.$blurple-stroke,
    inset 0px 1px 1px 1px colors.$white-hover-025,
    inset 0px -1px 1px 1px colors.$dark-purple-hover-025;
  padding: 18px 24px;
  border-radius: 10px;
  column-gap: 10px;
  transition: background-color const.$transition, box-shadow const.$transition,
    opacity const.$transition;
}

.hasHover {
  &:hover {
    opacity: 0.8;
    .arrow {
      transform: translateX(2px);
    }
  }
}

.outline {
  background-color: colors.$blurple-hover-01;
  box-shadow: 0 0 0 1px colors.$blurple-hover-03 inset;
  .text {
    color: colors.$blurple;
  }
  .arrow path {
    fill: colors.$blurple;
  }
  &.hasHover:hover {
    opacity: 1;
    background-color: colors.$blurple-hover-02;
    box-shadow: 0 0 0 1px colors.$blurple inset;
  }
}

.darkTheme {
  background-color: colors.$white;
  box-shadow: shadows.$small-black;
  .text {
    color: colors.$ui-dark;
  }
  .arrow {
    path {
      fill: colors.$ui-dark;
    }
  }
  &.hasHover:hover {
    background-color: colors.$white-hover-08;
  }
  &.outline {
    background-color: colors.$white-hover-01;
    box-shadow: 0 0 0 1px colors.$white-hover-03 inset;
    .text {
      color: colors.$white;
    }
    .arrow path {
      fill: colors.$white;
    }
    &.hasHover:hover {
      background-color: colors.$white-hover-02;
      box-shadow: 0 0 0 1px colors.$white inset;
    }
  }
}

.text {
  @include global.text();
}

.arrow {
  @include global.arrow(0, 0.5px);
}
